name: "CD"

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: "Type of release?"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    name: "Release"
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}

      - name: "Set up Python"
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: "Install Poetry"
        uses: snok/install-poetry@5e4414407e59f94f2148bcb253917dfc22dee7d9  # v1.3.0
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: "Bump pyproject.toml to new version"
        id: bump
        run: |
          poetry version ${{ github.event.inputs.release-type }}
          echo "::set-output name=version::$(poetry version --short)"

      - name: "Bump apilytics.__version__ to new version"
        run: sed -i 's/^__version__ *=.*/__version__ = "${{ steps.bump.outputs.version }}"/' apilytics/__init__.py

      - name: "Build the wheel"
        run: poetry build

      - name: "Publish to PyPI"
        run: poetry publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}

      - name: "Update the changelog"
        # Find the first line that starts with `###` or `## [<number>` from the CHANGELOG and insert the new version header before it.
        run: |
          current_date="$(date -u '+%Y-%m-%d')"
          sed -i "0,/^\(###\|## *\[[0-9]\).*/{s//## [${{ steps.bump.outputs.version }}] - ${current_date}\n\n&/}" CHANGELOG.md

      - name: "Extract version's changelog for release notes and tag message"
        # 1. Find the lines between the first `## [<number>` and the second `## [<number>`.
        # 2. Remove all leading and trailing newlines from the output.
        run: sed '1,/^## *\[[0-9]/d;/^## *\[[0-9]/Q' CHANGELOG.md | sed -e :a -e '/./,$!d;/^\n*$/{$d;N;};/\n$/ba' > release_notes.txt

      - name: "Commit and tag the changes"
        uses: EndBug/add-and-commit@8c12ff729a98cfbcd3fe38b49f55eceb98a5ec02  # v7.5.0
        with:
          add: '["pyproject.toml", "apilytics/__init__.py", "CHANGELOG.md"]'
          message: 'Release ${{ steps.bump.outputs.version }}'
          tag: 'v${{ steps.bump.outputs.version }} --annotate --file /dev/null'
          default_author: github_actions
          pathspec_error_handling: exitImmediately

      - name: "Create a GitHub release"
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5  # v1
        with:
          tag_name: v${{ steps.bump.outputs.version }}
          name: v${{ steps.bump.outputs.version }}
          body_path: release_notes.txt
